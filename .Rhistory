q()
dir()
q()
x <- 1
print(x)
x
msg <-"hello"
msg
print(msg)
x <-
2
x
x <-1234533234
x
x <- 1:20
x
x <- 1:30
x
q()
install.packages("KernSmooth")
install.packages("Kernsmooth")
yes
Yes
install.packages("KernSmooth")
install.packages("KernSmooth")
libpaths()
.libPaths()
pwd
getwd()
.libPaths( c( .libPaths(), "~/userLibrary") )
.libPaths()
cd ~
;
cd "~"
getwd()
cd ..
.libPaths( c( .libPaths(), "C:/Users/makam/userLibrary") )
.libPaths()
install.packages("KernSmooth")
install.packages("KernSmooth",lib="~/userLibrary")
install.packages("KernSmooth"
)
install.packages("KernSmooth")
library(KernSmooth)
exit
quit
quit
Exit
exit
q()
cube <- function(x,n){
x^3
}
cube(3)
x <- 1:10
if (x >5) {
x <-0
)
x <- 1:10
if (x >5) {
x <-0
}
x
f <- function(x) {
g <- function(y) {
       y+z
}
z <- 4
x + g(x)
}
z <-10
f(3)
x
x <-5
y <- if(x <3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
        z <- cbind(x, d)
        if(!is.null(y))
                z <- z + y
        else
                z <- z + f
        g <- x + y / z
        if(d == 3L)
                return(g)
        g <- g + 10
        g
}
h
h()
h(1)
getwd()
ls
directory()
search()
?rnorm
?getwd
?R.home
R.home()
list.files(R.home())
list.dirs(R.home("doc"))
list.dirs(R.home("doc"), full.names = FALSE)
q()
makeMatrix <- function (x =matrix(1:8,2,4))
{}
x
$x
makeMatrix()
$makeMatrix()
getwd()
setwd("C:/Users/makam/Desktop/Coursera/ProgrammingAssignment2")
getwd()
source(test.R)
source('test.R')
source("test.R")
source("test.R")
a
$a
a
?setMatrix()
source("setVector.R")
list.files()
source("cachematrix_sample.R")
setVector(1,2,3,4)
source("setVector.R")
setVector(1,2,3,4)
makeVector(1,2,3,4)
a <- makeVector(c(5,1,4))
a$get()
source("cachematrix_sample.R")
a <- cachematrix_sample.R(matrix(1:4,nrow=2,ncol=2))
a <- makeCacheMatrix(matrix(1:4,nrow=2,ncol=2))
a$get()
a$set(matrix(5:8,nrow=2,ncol=2))
a$get()
a$setinverse()
a$setinverse(0)
a$getinverse()
a <- makeCacheMatrix(matrix(1:4,nrow=2,ncol=2))
a$get()
a$cacheSolve()
cacheSolve(a)
a$getinverse()
q()
